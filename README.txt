# Структура проекта

billmgr - общие функции для работы с BILLmanager
payment.py - базовая функциональность для реализации собственного платежного модуля
pmtestpayment.py - пример основного обработчика платежной системы
testpayment.py - пример cgi для перехода в платежную систему для оплаты
billmgr_mod_testpayment.xml - xml с полями на форме настройки метода оплаты и мессагами

Директория billmgr указана в .gitignore, её в репозиторий заливать не нужно, соответственно как-то изменять - тоже.
Все остальные файлы можете редактировать, переименовывать на свое усмотрение

# Что сделать

В cgi формирование платежа на стороне платежной системы, получение ссылки на оплату, переход по ней.
В основном обработчике добавляем функциональность checkpay для проверки статуса платежа.

Также дополнительно можете реализовать функциональность валидации введенных данных (см. PM_Validate).
В частности будет полезным провалидировать введенный идентификатор, пароль и минимальную сумму оплаты.

# C чего начать? :)

Попробуйте сначала поигратся с тем, что уже есть.
Установите необходимые зависимости с помощью pip.
Разместите файлы в структуре файлов BILLmanager (/usr/local/mgr5) как указано в презентации.
При создании метода оплаты в списке выбора модуля оплаты должен появиться новый платежный модуль Test.
Попробуйте создать его. Подсказка: можно указать только определенные идентификатор и пароль, какие - найдите в коде)
Далее сделайте платеж, позовите checkpay.
Посмотрите, что пишется в логи var/testpayment.log и var/pmtestpayment.log

Изучите документацию платежной системы. Нас интересует инициализация платежа и получение статуса платежа.
Для http запросов в платежную систему вам скорее всего понадобиться библиотека requests (можете использовать и что-то другое - на ваше усмотрение). Неплохой обзор по библиотеке можно посмотреть здесь https://pythonru.com/biblioteki/kratkoe-rukovodstvo-po-biblioteke-python-requests
